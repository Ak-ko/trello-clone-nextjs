generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  avatarUrl   String?
  boards      Board[]   @relation("BoardMembers")
  ownedBoards Board[]   @relation("BoardOwner")
  comments    Comment[]
  cards       Card[]    @relation("CardAssignees")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Board {
  id          String   @id @default(uuid())
  name        String
  description String?
  owner       User     @relation("BoardOwner", fields: [ownerId], references: [id])
  ownerId     String
  members     User[]   @relation("BoardMembers")
  lists       List[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model List {
  id        String   @id @default(uuid())
  name      String
  position  Int
  board     Board    @relation(fields: [boardId], references: [id])
  boardId   String
  cards     Card[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id          String    @id @default(uuid())
  title       String
  description String?
  dueDate     DateTime?
  completed   Boolean   @default(false)
  position    Int
  list        List      @relation(fields: [listId], references: [id])
  listId      String
  assignees   User[]    @relation("CardAssignees")
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  message   String
  card      Card     @relation(fields: [cardId], references: [id])
  cardId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}
